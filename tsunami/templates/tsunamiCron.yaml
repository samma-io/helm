{{ if eq .Values.cron.enable "true"  }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: tsunami-{{ .Values.target | replace "." "-" }}
spec:
  schedule: "{{ .Values.cron.schedule}}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: tsunami
            image: sammascanner/tsunami:{{ .Values.image.tag}}
            {{ if .Values.targetIP }}
            args: ["--ip-v4-target={{ .Values.targetIP }}","--scan-results-local-output-format=JSON","--scan-results-local-output-filename=/out/tsunami-output.json"]
            {{else}}
            args: ["--hostname-target={{ .Values.target }}","--scan-results-local-output-format=JSON","--scan-results-local-output-filename=/out/tsunami-output.json"]
            {{end}}
            volumeMounts:
              - mountPath: /out
                name: out-volume
          - name: logger
            image: sammascanner/logger:0.1
            env:
              - name: TARGET
                value: "{{ .Values.target }}"
              - name: TUNING
                value: "{{ .Values.tuning }}"
              - name: PORT
                value: "{{ .Values.port }}" 
              - name: SAMMA_IO_SCANNER
                value: "{{ .Values.samma.scanner }}"
              - name: SAMMA_IO_ID
                value: "{{ .Values.samma.id }}"
              - name: SAMMA_IO_TAGS
                value: "{{ .Values.samma.tags }}"
              - name: SAMMA_IO_JSON
                value: '{{ .Values.samma.json }}'
              - name: WRITE_TO_FILE
                value: "{{ .Values.samma.write_to_file }}"
              - name: PARSER
                value: "{{ .Values.samma.parser }}"
            volumeMounts:
              - mountPath: /out
                name: out-volume
          {{ if eq .Values.filebeat "enable" }} 
          - name: filebeat
            image: docker.elastic.co/beats/filebeat:7.15.0
            env:
              - name: ELASTICSEARCH
                value: "{{ .Values.elasticsearch }}"
            livenessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - /live.sh
              initialDelaySeconds: 10
              periodSeconds: 5
            volumeMounts:
            - name: filebeat
              mountPath: "/usr/share/filebeat/filebeat.yml"
              subPath: "filebeat.yml"
            - name: liveness
              mountPath: "/live.sh"
              subPath: "live.sh"
            - mountPath: /out
              name: out-volume
          {{ end }}
          volumes:
          {{ if eq .Values.filebeat "enable" }} 
          - name: filebeat
            configMap:
              name: filebeat
          - name: liveness
            configMap:
              name: live
              defaultMode: 0777
          {{ end }}
          - name: out-volume
            emptyDir: {}
          restartPolicy: Never
{{end}}